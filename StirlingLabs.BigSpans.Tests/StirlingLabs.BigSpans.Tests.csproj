<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <IsPackable>false</IsPackable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <Authors>Stirling Labs</Authors>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="AutoBogus" Version="2.13.0" />
        <PackageReference Include="Iced" Version="1.13.0" />
        <PackageReference Include="NUnit" Version="3.13.2" />
        <PackageReference Include="NUnit3TestAdapter" Version="4.0.0" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.10.0" />
        <PackageReference Include="GitHubActionsTestLogger" Version="1.2.0" />
        <PackageReference Include="coverlet.collector" Version="3.0.3" PrivateAssets="all" />
        <PackageReference Include="coverlet.msbuild" Version="3.0.3" PrivateAssets="all" />
        <PackageReference Include="ReportGenerator" Version="4.8.11" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\StirlingLabs.BigSpans.NUnit\StirlingLabs.BigSpans.NUnit.csproj" />
        <ProjectReference Include="..\StirlingLabs.BigSpans\StirlingLabs.BigSpans.csproj" />
    </ItemGroup>
    <Target Name="GenerateHtmlCoverageReport" AfterTargets="GenerateCoverageResultAfterTest">
        <!-- remove absolute path using backslashes for windows -->
        <ReplaceFileTextByLines
                Condition="$(OS.StartsWith('Windows'))"
                InputFilename="@(CoverletReport)"
                OutputFilename="@(CoverletReport)"
                MatchText="$([System.IO.Path]::GetFullPath('..\StirlingLabs.BigSpans\'))"
                ReplacementText="" />

        <!-- remove absolute path using forward slashes for other platforms -->
        <ReplaceFileTextByLines
                Condition="!$(OS.StartsWith('Windows'))"
                InputFilename="@(CoverletReport)"
                OutputFilename="@(CoverletReport)"
                MatchText="$([System.IO.Path]::GetFullPath('../StirlingLabs.BigSpans/'))"
                ReplacementText="" />

        <!-- generate markdown coverage report and badges -->
        <ReportGenerator ReportFiles="@(CoverletReport)"
                         ReportTypes="MarkdownSummary;Badges"
                         SourceDirectories="../StirlingLabs.BigSpans"
                         TargetDirectory="../coverage/" />
      </Target>

      <!-- task to replace text line for line -->
      <UsingTask TaskName="ReplaceFileTextByLines" TaskFactory="RoslynCodeTaskFactory"
                 AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
          <InputFilename ParameterType="System.String" Required="true" />
          <OutputFilename ParameterType="System.String" Required="true" />
          <MatchText ParameterType="System.String" Required="true" />
          <ReplacementText ParameterType="System.String" Required="false" />
        </ParameterGroup>
        <Task>
          <Using Namespace="System" />
          <Using Namespace="System.Linq" />
          <Using Namespace="System.IO" />
          <Using Namespace="System.Text.RegularExpressions" />
          <Code Type="Fragment" Language="cs">
            <![CDATA[
                File.WriteAllLines(
                    OutputFilename,
                    File.ReadAllLines(InputFilename)
                        .Select(l => l.Replace(MatchText, ReplacementText))
                );
              ]]>
          </Code>
        </Task>
      </UsingTask>
</Project>
